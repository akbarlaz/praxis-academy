/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package latihan;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
//import org.hibernate.service.ServiceRegistry;
import org.hibernate.service.ServiceRegistry;
import java.util.Scanner;


public class App {
    /* public String getGreeting() {
        return "Hello world.";
    } */

    public static void main(String[] args) {
        //System.out.println(new App().getGreeting());

        /* Alien oAlien = new Alien();
        oAlien.setId(101);
        oAlien.setName("akbarlaz");
        oAlien.setColor("Blue");

        Session session = factory.openSession();
        Transaction tx = null;

        try {
        tx = session.beginTransaction();
        // do some work
        ...
        tx.commit();
        }

        catch (Exception e) {
        if (tx!=null) tx.rollback();
        e.printStackTrace(); 
        } finally {
        session.close();
        } 

        // Create the SessionFactory from hibernate.cfg.xml
        Configuration configuration = new Configuration();
        configuration.configure("hibernate.cfg.xml").addAnnotatedClass(Alien.class);
        ServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder()
            .applySettings(configuration.getProperties()).build();
        SessionFactory sessionFactory = configuration
            .buildSessionFactory(serviceRegistry);
        Session session = sessionFactory.openSession();
        Transaction tx = session.beginTransaction();        


        session.save(oAlien);
        
        tx.commit(); */

        String fname,lname;
        Integer salary, EmployeeID, pilihan;
        Scanner scan = new Scanner(System.in);
        ManageEmployee obj = new ManageEmployee();
        obj.connect();
        System.out.println("[1] Lihat data pegawai");
        System.out.println("[2] Tambah data pegawai");
        System.out.println("[3] Edit data pegawai");
        System.out.println("[4] Hapus data pegawai");
        System.out.println("Masukkan pilihan Anda.....");
        pilihan = scan.nextInt();
        

        switch (pilihan) {
            case 1:
                
                obj.listEmployees();        
                break;
            case 2:
                
                System.out.print("\nNama depan\t: ");
                fname = scan.next();
                System.out.print("\nNama belakang\t: ");
                lname = scan.next();
                System.out.print("\nGaji\t: ");
                salary = scan.nextInt();
                obj.addEmployee(fname, lname, salary);
                System.out.println("Data berhasil disimpan");
                break;
            case 3:
                
                obj.listEmployees();
                System.out.println("Masukkan id pegawai yg akan di update");
                EmployeeID = scan.nextInt();
                System.out.println("Masukkan gaji baru");
                salary = scan.nextInt();
                obj.updateEmployee(EmployeeID, salary);
                System.out.println("Data berhasil disimpan");
                obj.listEmployees();
                break;
            case 4:
                obj.listEmployees();
                System.out.println("Masukkan id pegawai yg akan di delete");
                EmployeeID = scan.nextInt();
                obj.deleteEmployee(EmployeeID);
                System.out.println("Data berhasil dihapus");
                break;
            default:
                break;
        }
        


        
    }
}
